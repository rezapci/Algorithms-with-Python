# Проанализировать скорость и сложность одного - трёх любых алгоритмов,
# разработанных в рамках домашнего задания первых трех уроков.

import timeit
import cProfile

# Анализ алгоритма поиска суммы n элементов следующего ряда чисел: 1 -0.5 0.25 -0.125 ... из задачи 4 урока 2
import random

def find_summ(n):
    x = 1
    y = 0

    for i in range(n):
        y = x + y
        x = x / -2
    return "Сумма {}".format(y)

nums = random.randint(1, 500)
# print(nums)
# print(find_summ(nums))

# через cProfile

cProfile.run('find_summ(nums)')

# 1    0.002    0.002    0.002    0.002 less4_task1_2.py:10(find_summ)  --- для 50000
# 1    0.023    0.023    0.023    0.023 less4_task1_2.py:10(find_summ)  --- для 500000
# 1    0.394    0.394    0.394    0.394 less4_task1_2.py:10(find_summ)  --- для 5000000

# через timeit

# Из-за сложностей с получением массива в качестве аргумента функции (выдает сплошные ошибки), для проверки через timeit
# была взята другая функция, без массивов на входе, см. файл less4_task1_timeit.py


